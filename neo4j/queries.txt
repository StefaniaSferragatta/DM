// query 1 
// match given drug - gene
MATCH (g:Gene)-[:alteration]->(p:Drug)
WHERE p.name = 'Ponatinib' 
return g.name;

// query 2
// Return all gene names together with the number
// of drugs associated
match (g)-[:alteration]->(d)
return g.name, count(distinct d)

// Return all gene names together with the number
// of sample in which are overexpressed
match (g)-[:IS_OVEREXPRESSED]->(s)
return g.name, count(distinct s) as num_samples

// query 3
// Top 5 genes per number of drugs associated 
match (g)-[:alteration]->(d)
with count(*) AS num_drug, g
return g.name, num_drug
order by num_drug desc
limit 5

// query 4
// Find a sample given a drug
MATCH (node1:Gene)-[:is_overexpressed]->(node2:Sample)
WHERE EXISTS ((node1)-[:alteration]->(:Drug {name: 'Ponatinib'}))
return node2.name as sample_id

// path
MATCH path = ((node1:Gene)-[:is_overexpressed]->(node2:Sample))
WHERE EXISTS ((node1)-[:alteration]->(:Drug {name: 'Ponatinib'}))
return path

// query 5
MATCH path = ((d)<-[:alteration]-(g:Gene)-[:is_overexpressed]->(s))
WHERE d.name = 'Dabrafenib'
return path, g.name;

#3.
# Find tumor suppressor genes that are overexpressed in at least 8 types of cancer

#10.
# Given a sample ID, return a list of overexpressed gene and possible type of alterations

#5.
# Find the sample which could be treated with the greates number of drugs

